# Parameters
nc: 1 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] #  第0层，-1代表将上层的输出作为本层的输入。第0层的输入是640*640*3的图像。Conv代表卷积层，相应的参数：64代表输出通道数，3代表卷积核大小k，2代表stride步长。卷积后输出的特征图尺寸为320*320*64，长宽为初始图片的1/2
  - [-1, 1, Conv, [128, 3, 2]] #第1层  1-P2/4
  - [-1, 3, C2f, [128, True]]#第2层 3代表本层重复3次。128代表输出通道数，True表示Bottleneck有shortcut。输出的特征图尺寸为160*160*128
  - [-1, 1, Conv, [256, 3, 2]] # 第3层  3-P3/8
  - [-1, 6, C2f, [256, True]]# 第4层
  - [-1, 1, SCDown, [512, 3, 2]] # 第5层，进行SCDown操作（512代表输出通道数，3代表卷积核大小k，2代表stride步长）
  - [-1, 6, C2f, [512, True]]# 第6层
  - [-1, 1, SCDown, [1024, 3, 2]] #第7层 7-P5/32
  - [-1, 3, C2f, [1024, True]]# 第8层
  - [-1, 1, SPPF, [1024, 5]] # 第9层这是快速空间金字塔池化层（SPPF）。1024代表输出通道数，5代表池化核大小
  - [-1, 1, PSA, [1024]] # 第10层 注意力模块

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]# 第11层 是上采样层。-1代表将上层的输出作为本层的输入。None代表上采样的size=None（输出尺寸）不指定。2代表scale_factor=2，表示输出的尺寸是输入尺寸的2倍。mode=nearest代表使用的上采样算法为最近邻插值算法。
  - [[-1, 6], 1, Concat, [1]] #第12层 cat backbone P4# concat层，[-1, 6]代表将上层和第6层的输出作为本层的输入。[1]代表concat拼接的维度是1。
  - [-1, 3, C2f, [512]] # 第13层

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #第14层
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3 第15层
  - [-1, 3, C2f, [256]] # 第16层 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]# 第17层
  - [[-1, 13], 1, Concat, [1]] # 第18层 cat head P4
  - [-1, 3, C2f, [512]] # 第19层  (P4/16-medium)

  - [-1, 1, SCDown, [512, 3, 2]]# 第20层
  - [[-1, 10], 1, Concat, [1]] # 第21层cat head P5
  - [-1, 3, C2fCIB, [1024, True, True]] # 第22层 (P5/32-large)

  - [[16, 19, 22], 1, v10Detect, [nc]] # Detect(P3, P4, P5)

